<%- include('../partials/header') %>

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2><%= invoice ? 'Edit Invoice' : 'Create New Invoice' %></h2>
        <p class="text-muted"><%= invoice ? 'Update invoice details' : 'Create a new invoice for your client' %></p>
    </div>
    <a href="/invoices" class="btn btn-secondary">Back to Invoices</a>
</div>

<div class="card">
    <div class="card-body">
        <form action="<%= action %>" method="POST" id="invoiceForm">
            <% if (method === 'PUT') { %>
                <input type="hidden" name="_method" value="PUT">
            <% } %>
            
            <div class="form-row">
                <div class="form-group">
                    <label for="client_id" class="form-label">Client *</label>
                    <select class="form-control" id="client_id" name="client_id" required>
                        <option value="">Select a client</option>
                        <% if (clients && clients.length > 0) { %>
                            <% clients.forEach(client => { %>
                                <option value="<%= client.id %>" <%= invoice && invoice.client_id == client.id ? 'selected' : '' %>>
                                    <%= client.name %><% if (client.company) { %> - <%= client.company %><% } %>
                                </option>
                            <% }); %>
                        <% } %>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="proposal_id" class="form-label">Related Proposal</label>
                    <select class="form-control" id="proposal_id" name="proposal_id">
                        <option value="">No proposal</option>
                        <% if (proposals && proposals.length > 0) { %>
                            <% proposals.forEach(proposal => { %>
                                <option value="<%= proposal.id %>" 
                                        data-client-id="<%= proposal.client_id %>"
                                        <%= invoice && invoice.proposal_id == proposal.id ? 'selected' : '' %>>
                                    <%= proposal.title %>
                                </option>
                            <% }); %>
                        <% } %>
                    </select>
                </div>
            </div>
            
            <div class="form-group">
                <label for="title" class="form-label">Invoice Title *</label>
                <input 
                    type="text" 
                    class="form-control" 
                    id="title" 
                    name="title" 
                    value="<%= invoice ? invoice.title : '' %>" 
                    required
                    placeholder="Enter invoice title"
                >
            </div>
            
            <div class="form-group">
                <label for="description" class="form-label">Description</label>
                <textarea 
                    class="form-control" 
                    id="description" 
                    name="description" 
                    rows="3"
                    placeholder="Brief description of services or products"
                ><%= invoice ? (invoice.description || '') : '' %></textarea>
            </div>
            
            <div class="form-row-3">
                <div class="form-group">
                    <label for="amount" class="form-label">Subtotal ($) *</label>
                    <input 
                        type="number" 
                        class="form-control" 
                        id="amount" 
                        name="amount" 
                        value="<%= invoice ? (invoice.amount || '') : '' %>"
                        step="0.01"
                        min="0"
                        required
                        placeholder="0.00"
                        onchange="calculateTotal()"
                    >
                </div>
                
                <div class="form-group">
                    <label for="tax_amount" class="form-label">Tax Amount ($)</label>
                    <input 
                        type="number" 
                        class="form-control" 
                        id="tax_amount" 
                        name="tax_amount" 
                        value="<%= invoice ? (invoice.tax_amount || '') : '' %>"
                        step="0.01"
                        min="0"
                        placeholder="0.00"
                        onchange="calculateTotal()"
                    >
                </div>
                
                <div class="form-group">
                    <label for="total_amount" class="form-label">Total Amount ($)</label>
                    <input 
                        type="number" 
                        class="form-control" 
                        id="total_amount" 
                        name="total_amount" 
                        value="<%= invoice ? (invoice.total_amount || '') : '' %>"
                        step="0.01"
                        min="0"
                        readonly
                        style="background-color: var(--bg-tertiary);"
                    >
                </div>
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label for="due_date" class="form-label">Due Date</label>
                    <input 
                        type="date" 
                        class="form-control" 
                        id="due_date" 
                        name="due_date" 
                        value="<%= invoice ? (invoice.due_date ? new Date(invoice.due_date).toISOString().split('T')[0] : '') : '' %>"
                    >
                </div>
                
                <% if (invoice) { %>
                    <div class="form-group">
                        <label for="status" class="form-label">Status</label>
                        <select class="form-control" id="status" name="status">
                            <option value="pending" <%= invoice.status === 'pending' ? 'selected' : '' %>>Pending</option>
                            <option value="paid" <%= invoice.status === 'paid' ? 'selected' : '' %>>Paid</option>
                            <option value="overdue" <%= invoice.status === 'overdue' ? 'selected' : '' %>>Overdue</option>
                            <option value="cancelled" <%= invoice.status === 'cancelled' ? 'selected' : '' %>>Cancelled</option>
                        </select>
                    </div>
                <% } %>
            </div>
            
            <!-- Line Items Section -->
            <div class="form-section mt-4">
                <h4>Line Items</h4>
                <p class="text-muted">Add individual items or services to this invoice</p>
                
                <div id="lineItems">
                    <!-- Line items will be added here -->
                </div>
                
                <button type="button" class="btn btn-secondary" onclick="addLineItem()">
                    Add Line Item
                </button>
            </div>
            
            <div class="d-flex gap-3 mt-4">
                <button type="submit" class="btn btn-primary">
                    <%= invoice ? 'Update Invoice' : 'Create Invoice' %>
                </button>
                <a href="/invoices" class="btn btn-secondary">Cancel</a>
            </div>
        </form>
    </div>
</div>

<script>
let lineItemCount = 0;

function addLineItem(description = '', quantity = 1, rate = 0) {
    const lineItemsContainer = document.getElementById('lineItems');
    const itemId = lineItemCount++;
    
    const lineItemHtml = `
        <div class="line-item card mb-3" id="lineItem_${itemId}">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-start mb-3">
                    <h6>Line Item ${itemId + 1}</h6>
                    <button type="button" class="btn btn-sm btn-danger" onclick="removeLineItem(${itemId})">Remove</button>
                </div>
                
                <div class="form-group">
                    <label class="form-label">Description</label>
                    <input type="text" class="form-control" name="items[${itemId}][description]" value="${description}" placeholder="Describe this item or service">
                </div>
                
                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label">Quantity</label>
                        <input type="number" class="form-control" name="items[${itemId}][quantity]" value="${quantity}" min="1" onchange="calculateLineTotal(${itemId})">
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Rate ($)</label>
                        <input type="number" class="form-control" name="items[${itemId}][rate]" value="${rate}" step="0.01" min="0" onchange="calculateLineTotal(${itemId})">
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Amount ($)</label>
                        <input type="number" class="form-control" id="amount_${itemId}" name="items[${itemId}][amount]" value="${quantity * rate}" readonly>
                    </div>
                </div>
            </div>
        </div>
    `;
    
    lineItemsContainer.insertAdjacentHTML('beforeend', lineItemHtml);
    calculateSubtotal();
}

function removeLineItem(itemId) {
    const lineItem = document.getElementById(`lineItem_${itemId}`);
    if (lineItem) {
        lineItem.remove();
        calculateSubtotal();
    }
}

function calculateLineTotal(itemId) {
    const quantityInput = document.querySelector(`input[name="items[${itemId}][quantity]"]`);
    const rateInput = document.querySelector(`input[name="items[${itemId}][rate]"]`);
    const amountInput = document.getElementById(`amount_${itemId}`);
    
    const quantity = parseFloat(quantityInput.value) || 0;
    const rate = parseFloat(rateInput.value) || 0;
    const total = quantity * rate;
    
    amountInput.value = total.toFixed(2);
    calculateSubtotal();
}

function calculateSubtotal() {
    const amountInputs = document.querySelectorAll('input[name*="[amount]"]');
    let subtotal = 0;
    
    amountInputs.forEach(input => {
        subtotal += parseFloat(input.value) || 0;
    });
    
    document.getElementById('amount').value = subtotal.toFixed(2);
    calculateTotal();
}

function calculateTotal() {
    const subtotal = parseFloat(document.getElementById('amount').value) || 0;
    const taxAmount = parseFloat(document.getElementById('tax_amount').value) || 0;
    const total = subtotal + taxAmount;
    
    document.getElementById('total_amount').value = total.toFixed(2);
}

// Filter proposals based on selected client
document.getElementById('client_id').addEventListener('change', function() {
    const selectedClientId = this.value;
    const proposalSelect = document.getElementById('proposal_id');
    const proposalOptions = proposalSelect.querySelectorAll('option[data-client-id]');
    
    proposalOptions.forEach(option => {
        if (selectedClientId === '' || option.dataset.clientId === selectedClientId) {
            option.style.display = '';
        } else {
            option.style.display = 'none';
        }
    });
    
    // Reset proposal selection if current selection doesn't match client
    const currentProposal = proposalSelect.querySelector('option:checked');
    if (currentProposal && currentProposal.dataset.clientId && 
        currentProposal.dataset.clientId !== selectedClientId) {
        proposalSelect.value = '';
    }
});

// Initialize with one line item
document.addEventListener('DOMContentLoaded', function() {
    addLineItem();
    calculateTotal(); // Calculate initial total
    
    // Trigger client filter on page load
    document.getElementById('client_id').dispatchEvent(new Event('change'));
});

document.getElementById('invoiceForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const method = '<%= method %>';
    
    // Convert FormData to regular object for JSON
    const data = {};
    const items = [];
    
    formData.forEach((value, key) => {
        if (key.startsWith('items[')) {
            // Parse line items
            const match = key.match(/items\[(\d+)\]\[(\w+)\]/);
            if (match) {
                const index = parseInt(match[1]);
                const field = match[2];
                
                if (!items[index]) items[index] = {};
                items[index][field] = value;
            }
        } else if (key !== '_method') {
            data[key] = value;
        }
    });
    
    // Filter out empty items and add to data
    data.items = items.filter(item => item && item.description && item.description.trim());
    
    fetch('<%= action %>', {
        method: method === 'PUT' ? 'PUT' : 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(data)
    })
    .then(response => {
        if (response.redirected) {
            window.location.href = response.url;
        } else if (response.ok) {
            <% if (invoice) { %>
                window.location.href = '/invoices/<%= invoice.id %>';
            <% } else { %>
                window.location.href = '/invoices';
            <% } %>
        } else {
            throw new Error('Network response was not ok');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Error saving invoice. Please try again.');
    });
});
</script>

<%- include('../partials/footer') %>